name: Deploy to ECR

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY: ${{ secrets.ECR_REPO }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set essential login AWS details to configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Create production env file and Push to ECR  
        run: |
          cd ${{ github.workspace }}
          # Create production environment files
          echo "DB_HOST=${{ secrets.DB_HOST }}" > services/login/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> services/login/.env
          echo "DB_PWD=${{ secrets.DB_PWD }}" >> services/login/.env
          echo "DB_ROOT_ACCOUNT=${{ secrets.DB_ROOT_ACCOUNT }}" >> services/login/.env
          echo "DB_TABLE_NAME=${{ secrets.DB_TABLE_NAME }}" >> services/login/.env
          echo "PORT=${{ secrets.PORT }}" >> services/login/.env
          echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> services/login/.env
          
          # Build and tag the Docker images
          docker-compose build
          docker images

          # Log in to ECR
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REPOSITORY }}
          
          # Tag transition website login applications push the Docker images to ECR
          docker tag transition_website_login ${{ env.ECR_REPOSITORY }}:$(date +%s)
          docker push ${{ env.ECR_REPOSITORY }}:$(date +%s)


          # Tag and push the MySQL image to ECR
          docker tag mysql:8 ${{ env.ECR_REPOSITORY }}/mysql:latest
          docker push ${{ env.ECR_REPOSITORY }}/mysql:latest
          
          # Tag and push the phpmyadmin image to ECR
          docker tag phpmyadmin/phpmyadmin ${{ env.ECR_REPOSITORY }}/phpmyadmin:latest
          docker push ${{ env.ECR_REPOSITORY }}/phpmyadmin:latest

